Parameters:
  ServerName:
    Description: "Enter the name of the service the EC2 instance will be used for."
    Type: String

  InstanceTypeParameter:
    Description: "Enter the instance type (t2.micro, t2.small, or t2.medium). Default is t2.micro."
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium

  KeyPair:
    Description: "Name of the EC2 login key pair."
    Type: AWS::EC2::KeyPair::KeyName

Mappings:
  AMIRegionMap:
    us-east-1:
      MyAMI: ami-0ae8f15ae66fe8cda
    us-west-1:
      MyAMI: ami-0fda60cefceeaa4d3
    us-east-2:
      MyAMI: ami-05c3dc660cb6907f0

Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              php: []
              httpd: []
              wget: []
              unzip: []
              git: []
          commands:
            download_and_install:
              command: |
                wget https://www.tooplate.com/zip-templates/2119_gymso_fitness.zip
                unzip 2119_gymso_fitness.zip
                cp -r 2119_gymso_fitness/* /var/www/html/
          files:
            /var/www/html/hello.html:
              content: !Sub |
                <!DOCTYPE html>
                <html>
                <body>
                  <h1>Welcome to CloudFormation</h1>
                  <p>This site is deployed by CloudFormation.</p>
                </body>
                </html>
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true

    Properties:
      InstanceType: !Ref InstanceTypeParameter
      ImageId: !FindInMap [AMIRegionMap, !Ref AWS::Region, MyAMI]
      Tags:
        - Key: "Name"
          Value: !Ref ServerName
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyPair
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -xe
          yum install -y httpd aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}
          systemctl start httpd
          systemctl enable httpd
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServer --region ${AWS::Region}

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH and HTTP access."
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

Outputs:
  WebServerPublicDNS:
    Description: "Public DNS name of the WebServer."
    Value: !GetAtt WebServer.PublicDnsName